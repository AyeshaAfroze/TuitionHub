SET SERVEROUTPUT ON;
SET VERIFY OFF;
DROP TABLE TUTOR CASCADE CONSTRAINTS;
DROP TABLE T1_LOCATION CASCADE CONSTRAINTS;
DROP TABLE T2_CLASS CASCADE CONSTRAINTS;


CREATE TABLE TUTOR(
    TUTOR_ID INT,
    NAME VARCHAR(30),
    PHONE INT,
    GENDER VARCHAR(30),
	DOB DATE,
	EMAIL VARCHAR2(100),
	OCCUPATION VARCHAR2(200),
	INSTITUTION VARCHAR2(200),	
	primary key (TUTOR_ID));

CREATE TABLE T1_LOCATION(
	T1_SL INT,
    TUTOR_ID INT,
	LOC VARCHAR2(200),
	PRIMARY KEY (T1_SL),
	FOREIGN KEY(TUTOR_ID) REFERENCES TUTOR(TUTOR_ID));


CREATE TABLE T2_CLASS(
	T2_SL INT,
    TUTOR_ID INT,
	CLAS VARCHAR2(200),
    MEDIUM VARCHAR2(200),
	SUBJECT VARCHAR2(200),	
	PRIMARY KEY (T2_SL),
	FOREIGN KEY(TUTOR_ID) REFERENCES TUTOR(TUTOR_ID));

	

CREATE OR REPLACE TRIGGER TRIG1 
AFTER INSERT 
ON TUTOR
FOR EACH ROW
DECLARE
BEGIN
	DBMS_OUTPUT.PUT_LINE('VALUES INSERTED IN TUTOR');
END;
/
CREATE OR REPLACE TRIGGER TRIG2 
AFTER INSERT 
ON T1_LOCATION
FOR EACH ROW
DECLARE
BEGIN
	DBMS_OUTPUT.PUT_LINE('VALUES INSERTED IN T1_LOCATION');
END;
/
CREATE OR REPLACE TRIGGER TRIG3  
AFTER INSERT 
ON T2_CLASS
FOR EACH ROW
DECLARE
BEGIN
	DBMS_OUTPUT.PUT_LINE('VALUES INSERTED IN T2_CLASS');
END;
/	
insert into TUTOR(TUTOR_ID,NAME,PHONE,GENDER,DOB,EMAIL,OCCUPATION,INSTITUTION)
VALUES (1,'Abid ','01710123456','M,A,S,D','13-JAN-1999','abid@gmail.com','STUDENT','AUST');
insert into TUTOR(TUTOR_ID,NAME,PHONE,GENDER,DOB,EMAIL,OCCUPATION,INSTITUTION)
VALUES (2,'IDRIS','01710123456','M','13-feb-1999','IDRIS@gmail.com','STUDENT','BUET');
insert into TUTOR(TUTOR_ID,NAME,PHONE,GENDER,DOB,EMAIL,OCCUPATION,INSTITUTION)
VALUES (3,'SALEH','01710123456','M','13-MAR-1999','SALEH@gmail.com','STUDENT','BRAC');
insert into TUTOR(TUTOR_ID,NAME,PHONE,GENDER,DOB,EMAIL,OCCUPATION,INSTITUTION)
VALUES (4,'IBRAHIM','01710123456','M','13-APR-1999','IBRAHIM@gmail.com','STUDENT','NSU');
insert into TUTOR(TUTOR_ID,NAME,PHONE,GENDER,DOB,EMAIL,OCCUPATION,INSTITUTION)
VALUES (5,'ISMAIL','01710123456','M','13-MAY-1999','ISMAIL@gmail.com','STUDENT','AUST');

INSERT INTO T1_LOCATION(T1_SL, TUTOR_ID, LOC) VALUES (1,2,'MOTIJHEEL');
INSERT INTO T1_LOCATION(T1_SL, TUTOR_ID, LOC) VALUES (2,2,'PALTAN');
INSERT INTO T1_LOCATION(T1_SL, TUTOR_ID, LOC) VALUES (3,2,'KAKRAIL');
INSERT INTO T1_LOCATION(T1_SL, TUTOR_ID, LOC) VALUES (4,3,'MIRPUR');
INSERT INTO T1_LOCATION(T1_SL, TUTOR_ID, LOC) VALUES (5,3,'MOHAMMADPUR');
INSERT INTO T1_LOCATION(T1_SL, TUTOR_ID, LOC) VALUES (6,4,'GREENROAD');

INSERT INTO T2_CLASS(T2_SL,TUTOR_ID,CLAS,MEDIUM,SUBJECT) VALUES(1,2,'9','ENGLISH','PHYSICS');
INSERT INTO T2_CLASS(T2_SL,TUTOR_ID,CLAS,MEDIUM,SUBJECT) VALUES(2,2,'9','ENGLISH','CHEMISTRY');
INSERT INTO T2_CLASS(T2_SL,TUTOR_ID,CLAS,MEDIUM,SUBJECT) VALUES(3,2,'10','ENGLISH','MATH');
INSERT INTO T2_CLASS(T2_SL,TUTOR_ID,CLAS,MEDIUM,SUBJECT) VALUES(4,3,'8','BANGLA','MATH');
INSERT INTO T2_CLASS(T2_SL,TUTOR_ID,CLAS,MEDIUM,SUBJECT) VALUES(5,3,'9','BANGLA','BGS');

COMMIT;



CREATE OR REPLACE PACKAGE mypack AS	
	PROCEDURE AREA (ID IN number);
	PROCEDURE BEST (ID IN number);
	FUNCTION SAL_RAN(Z1 IN NUMBER,Z2 IN NUMBER)
	RETURN NUMBER;
	PROCEDURE hiGH (ID IN number);


END mypack;
/

CREATE OR REPLACE PACKAGE BODY mypack AS	
PROCEDURE AREA (ID IN number)
IS	
	T INT;	
	LOC1 VARCHAR2(200);
	Z1 VARCHAR2(200);
	Z2 VARCHAR2(200);
	Z3 VARCHAR2(200);
	Z4 VARCHAR2(200);
	Z5 VARCHAR2(200);
	Z6 VARCHAR2(200);
	Z7 VARCHAR2(200);
	Z8 VARCHAR2(200);
	Z9 VARCHAR2(200);
	Z10 VARCHAR2(200);
	
	GNAME VARCHAR2(200);	
BEGIN			
		
		FOR C IN (SELECT LOC FROM T1_LOCATION WHERE TUTOR_ID=ID) LOOP
			LOC1:=C.LOC;	 	
			
			FOR CC IN  (SELECT * FROM TUITION@SITE1 T1 INNER JOIN REQ@SITE1 T2 ON T1.TUITION_ID=T2.TUITION_ID WHERE LOC=LOC1) LOOP		
				DBMS_OUTPUT.PUT_LINE('LOACTION:'||LOC1);			
					T:=CC.REQ_ID;		
				
					Z2:=CC.SALARY;			
					Z3:=CC.G_NAME;	
					Z4:=CC.S_NAME;
					Z5:=CC.GENDER;
					Z6:=CC.CLAS;
					Z7:=CC.MEDIUM;
					Z8:=CC.LOC;
					Z9:=CC.DURATION;
					Z10:=CC.PHONE;
			DBMS_OUTPUT.PUT_LINE('REQUEST ID: '|| T);			
			DBMS_OUTPUT.PUT_LINE('SALARY: '||Z2);
			DBMS_OUTPUT.PUT_LINE('GUARDIAN NAME: '||Z3);	
			DBMS_OUTPUT.PUT_LINE('STUDENT NAME: '||Z4);	
			DBMS_OUTPUT.PUT_LINE('GENDER: '||Z5);	
			DBMS_OUTPUT.PUT_LINE('CLASS:'|| Z6);	
			DBMS_OUTPUT.PUT_LINE('MEDIUM: '||Z7);				
			DBMS_OUTPUT.PUT_LINE('DURATION: '||Z9||' HOURS');	
			DBMS_OUTPUT.PUT_LINE('PHONE: '||Z10);	
			DBMS_OUTPUT.PUT_LINE('-------------------------------------------------------  ');	
			DBMS_OUTPUT.PUT_LINE('  ');	
			END LOOP;		
		END LOOP;			
EXCEPTION		
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('DATA NOT FOUND');		
END AREA;




PROCEDURE BEST (ID IN number)
IS	
	FLAG NUMBER;		
	T INT;	
	T2 INT;	
	T3 INT;	
	R INT;	
	LOC1 VARCHAR2(200);
	M VARCHAR2(200);
	M1 VARCHAR2(200);
	C VARCHAR2(200);
	C1 VARCHAR2(200);
	S VARCHAR2(200);	
	S1 VARCHAR2(200);	
	SAL VARCHAR2(200);	
	DUR VARCHAR2(200);	
	GNAME VARCHAR2(200);
	Z1 VARCHAR2(200);
	Z2 VARCHAR2(200);
	Z3 VARCHAR2(200);
	Z4 VARCHAR2(200);
	Z5 VARCHAR2(200);
	Z6 VARCHAR2(200);
	Z7 VARCHAR2(200);
	Z8 VARCHAR2(200);
	Z9 VARCHAR2(200);
	Z10 VARCHAR2(200);	
	
	
BEGIN		
		
		FOR CC IN (SELECT LOC FROM T1_LOCATION WHERE TUTOR_ID=ID) LOOP
			LOC1:=CC.LOC;	     	
			FOR D IN  (SELECT * FROM TUITION@SITE1 WHERE LOC=LOC1) LOOP	
			FLAG:=0;
				T:=D.TUITION_ID;									
				SELECT MEDIUM,CLAS,REQ_ID INTO M,C,R FROM REQ@SITE1 WHERE TUITION_ID=T;									
				FOR E IN (SELECT * FROM SUB@SITE1 WHERE REQ_ID=R) LOOP
					S:=E.SUB;
					FOR F IN (SELECT * FROM T2_CLASS WHERE TUTOR_ID=ID) LOOP 
						C1:=F.CLAS;
						M1:=F.MEDIUM;
						S1:=F.SUBjECT;
						if c1=c and m1=m and s1=s then
							FLAG:=FLAG+1;							
						end if;
					END LOOP;
				END LOOP;	
			if flag>0 then 
				
				DBMS_OUTPUT.PUT_LINE('TUITION ID: '||T);	
				SELECT SALARY,DURATION,CLAS,MEDIUM INTO Z2,Z9,Z6,Z7 FROM REQ@SITE1 WHERE REQ_ID=R;			

				SELECT G_NAME,S_NAME,GENDER,LOC,PHONE INTO Z3,Z4,Z5,Z8,Z10 FROM TUITION@SITE1 WHERE TUITION_ID=T;
				
				DBMS_OUTPUT.PUT_LINE('SALARY: '||Z2);
				DBMS_OUTPUT.PUT_LINE('GUARDIAN NAME: '||Z3);	
				DBMS_OUTPUT.PUT_LINE('STUDENT NAME: '||Z4);	
				DBMS_OUTPUT.PUT_LINE('GENDER: '||Z5);	
				DBMS_OUTPUT.PUT_LINE('CLASS:'|| Z6);
				DBMS_OUTPUT.PUT_LINE('MEDIUM: '||Z7);	
				DBMS_OUTPUT.PUT_LINE('LOCATION: '||Z8);	
				DBMS_OUTPUT.PUT_LINE('DURATION: '||Z9||' HOURS');
				DBMS_OUTPUT.PUT_LINE('PHONE: '||Z10);	
		
			end if;	
			END LOOP;		
		END LOOP;
EXCEPTION		
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('DATA NOT FOUND');			
END BEST;

FUNCTION SAL_RAN(Z1 IN NUMBER,Z2 IN NUMBER)
RETURN NUMBER
IS
	
	FLAG NUMBER;		
	T INT;	
	T2 INT;	
	T3 INT;	
	R INT;	
	LOC1 VARCHAR2(200);	
	M VARCHAR2(200);
	D VARCHAR2(200);
	M1 VARCHAR2(200);
	C VARCHAR2(200);
	C1 VARCHAR2(200);
	S VARCHAR2(200);	
	S1 VARCHAR2(200);	
	SAL VARCHAR2(200);	
	DUR VARCHAR2(200);	
	GNAME VARCHAR2(200);	
	SNAME VARCHAR2(200);	
	L VARCHAR2(200);	
	G VARCHAR2(200);	
	P VARCHAR2(200);	
	
BEGIN

	FOR A IN (SELECT * FROM REQ@SITE1 WHERE SALARY>Z1 AND SALARY < Z2) LOOP 
		R:=A.REQ_ID;
		T:=A.TUITION_ID;
		DBMS_OUTPUT.PUT_LINE(R);		
		
		SELECT G_NAME,S_NAME,GENDER,LOC,PHONE INTO GNAME,SNAME,G,L,P FROM TUITION@SITE1 WHERE TUITION_ID=T;
		SELECT CLAS,MEDIUM,DURATION,SALARY INTO C,M,D,S FROM REQ@SITE1 WHERE REQ_ID=R;
		DBMS_OUTPUT.PUT_LINE('GUARDIAN NAME: '||GNAME);	
		DBMS_OUTPUT.PUT_LINE('STUDENT NAME: '||SNAME);	
		DBMS_OUTPUT.PUT_LINE('GENDER: '||G);	
		DBMS_OUTPUT.PUT_LINE('LOCATION: '||L);	
		DBMS_OUTPUT.PUT_LINE('PHONE: '||P);	
		DBMS_OUTPUT.PUT_LINE('CLASS: '||C);	
		DBMS_OUTPUT.PUT_LINE('MEDIUM: '||M);	
		DBMS_OUTPUT.PUT_LINE('DURATION: '||D||'HOURS');	
		DBMS_OUTPUT.PUT_LINE('SALARY: '||S);	
		
		
		FOR BB IN (SELECT * FROM SUB@SITE1 WHERE REQ_ID=R) LOOP
			S1:=BB.SUB;
				DBMS_OUTPUT.PUT_LINE('SUBJECT: '||S1);				
		END LOOP;

			
	END LOOP;
EXCEPTION		
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('DATA NOT FOUND');
RETURN 1;
END SAL_RAN;



PROCEDURE hiGH (ID IN number)
IS
	FLAG NUMBER;		
	T INT;	
	T2 INT;	
	T3 INT;	
	R INT;	
	LOC1 VARCHAR2(200);	
	M VARCHAR2(200);	
	C VARCHAR2(200);	
	S VARCHAR2(200);	
	S1 VARCHAR2(200);		
	SA1 VARCHAR2(200);	
	SA2 VARCHAR2(200);	
	SUM1 VARCHAR2(200);
	Z1 VARCHAR2(200);
	Z2 VARCHAR2(200);
	Z3 VARCHAR2(200);
	Z4 VARCHAR2(200);
	Z5 VARCHAR2(200);
	Z6 VARCHAR2(200);
	Z7 VARCHAR2(200);
	Z8 VARCHAR2(200);
	Z9 VARCHAR2(200);
	Z10 VARCHAR2(200);


	
BEGIN
	FOR AA IN (SELECT LOC FROM T1_LOCATION WHERE TUTOR_ID=ID) LOOP
	LOC1:=AA.LOC;
	SUM1:=0;	
		FOR BB IN (SELECT * FROM T2_CLASS WHERE TUTOR_ID=ID) LOOP
			C:=BB.CLAS;
			M:=BB.MEDIUM;
			S:=BB.SUBJECT;			
			FOR CC IN (	SELECT *  FROM (SELECT  * FROM TUITION@SITE1 T INNER JOIN REQ@SITE1 REQ ON T.TUITION_ID=REQ.TUITION_ID WHERE LOC = LOC1) 
			R INNER JOIN SUB@SITE1 S ON R.REQ_ID= S.REQ_ID WHERE  MEDIUM=M AND SUB = S AND CLAS = C ) LOOP
					
				SA1:=CC.TUITION_ID;	
				SA2:=CC.SALARY;	
	
				IF SUM1 < SA2 THEN
					SUM1:=SA2;
					Z1:=SA1;
					Z2:=SA2;			
					Z3:=CC.G_NAME;	
					Z4:=CC.S_NAME;
					Z5:=CC.GENDER;
					Z6:=CC.CLAS;
					Z7:=CC.MEDIUM;
					Z8:=CC.LOC;
					Z9:=CC.DURATION;
					Z10:=CC.PHONE;
					
				END IF;				
			END LOOP;		
			
		END LOOP;
	
	END LOOP;
			DBMS_OUTPUT.PUT_LINE('TUITION ID:'||Z1);
			DBMS_OUTPUT.PUT_LINE('SALARY: '||Z2);
			DBMS_OUTPUT.PUT_LINE('GUARDIAN NAME: '||Z3);	
			DBMS_OUTPUT.PUT_LINE('STUDENT NAME: '||Z4);	
			DBMS_OUTPUT.PUT_LINE('GENDER: '||Z5);	
			DBMS_OUTPUT.PUT_LINE('CLASS:'|| Z6);	
			DBMS_OUTPUT.PUT_LINE('MEDIUM: '||Z7);	
			DBMS_OUTPUT.PUT_LINE('LOCATION: '||Z8);	
			DBMS_OUTPUT.PUT_LINE('DURATION: '||Z9||' HOURS');	
			DBMS_OUTPUT.PUT_LINE('PHONE: '||Z10);	
EXCEPTION		
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('DATA NOT FOUND');	
END HIGH;

END mypack;
/



ACCEPT Y NUMBER PROMPT "PRESS 1 FOR AREA BASED,2 FOR BEST MATCH,3 FOR SALARY BASED,4 FOR HIGHEST PAY:"
ACCEPT X NUMBER PROMPT "Enter Tutor Id = "

DECLARE
	ID number;	
	OP number;	
	Z1 NUMBER;	
	Z2 NUMBER;
	FUNC NUMBER;
BEGIN
	OP:=&Y;
	ID:=&X;
	IF OP=1 THEN
		MYPACK.AREA(ID);
	ELSIF OP=2 THEN
		MYPACK.BEST(ID);
	ELSIF OP=3 THEN	
		Z1:=&LOWER_RANGE;
		Z2:=&UPPER_RANGE;
		FUNC:=MYPACK.SAL_RAN(Z1,Z2);	
	ELSIF OP=4 THEN
		MYPACK.HIGH(ID);	
	
	END IF;	
END;
/